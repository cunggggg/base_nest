export enum ErrorType {
  InvalidToken = 'INVALID_TOKEN',
  AccessTokenExpired = 'ACCESS_TOKEN_EXPIRED',
  RefreshTokenExpired = 'REFRESH_TOKEN_EXPIRED',
  PermissionExists = 'PERMISSION_EXISTS',
  RoleExists = 'ROLE_EXISTS',
  UserExists = 'USER_EXISTS',
  UserNotFound = 'USER_NOT_FOUND',
  ContestExists = 'CONTEST_NAME_EXISTS',
  ContentExistInContest = 'CONTENT_EXIST_IN_CONTEST',
  ContentNotExistInContest = 'CONTENT_NOT_EXIST_IN_CONTEST',
  ContentNotExistInBattle = 'CONTENT_NOT_EXIST_IN_BATTLE',
  ContestPromoteLimit = 'CONTEST_PROMOTE_LIMIT',
  ContestOverMaxParticipant = 'CONTEST_OVER_MAX_PARTICIPANT',
  InvalidCurrentPassword = 'INVALID_CURRENT_PASSWORD',
  InvalidCredentials = 'INVALID_CREDENTIALS',
  BlockedUser = 'BLOCKED_USER',
  InactiveUser = 'INACTIVE_USER',
  ForeignKeyConflict = 'FOREIGN_KEY_CONFLICT',
  InvalidProvider = 'INVALID_PROVIDER',
  InvalidVideoFile = 'INVALID_VIDEO_FILE',
  InvalidImageFile = 'INVALID_IMAGE_FILE',
  UserAlreadyFollow = 'USER_ALREADY_FOLLOWED',
  UserNotFollow = 'USER_NOT_FOLLOWED',
  InvalidUploadExt = 'INVALID_UPLOAD_EXTERNAL',
  CannotDownloadExt = 'CAN_NOT_DOWNLOAD_EXTERNAL',
  ContentSingleUpload = 'CONTENT_SINGLE_UPLOAD',
  ContentLengthLimit = 'CONTENT_LENGTH_LIMIT',
  ContentUploadError = 'CONTENT_UPLOAD_ERROR',
  UserContestExists = 'USER_CONTEST_EXISTS',
  UserContentVoteExists = 'USER_CONTENT_VOTE_EXISTS',
  UserIsNotCreator = 'USER_IS_NOT_CREATOR',
  ContentNotByUser = 'CONTENT_NOT_BY_USER',
  UserVoted = 'USER_VOTED',
  UserEnergyNotEnough = 'USER_ENERGY_NOT_ENOUGH',
  ContestClaimInvalid = 'CONTEST_CLAIM_INVALID',
  ContestStateInvalid = 'CONTEST_STATE_INVALID',
  ContestTimeInvalid = 'CONTEST_TIME_INVALID',
  ContestUpdateTimeInvalid = 'CONTEST_UPDATE_TIME_INVALID',
  ContestIdRequired = 'CONTEST_ID_REQUIRED',
  ContestUploadState = 'CONTEST_UPLOAD_STATE',
  UnlimitedContestUploadState = 'UNLIMITED_CONTEST_UPLOAD_STATE',
  ContestInVotingState = 'CONTEST_IN_VOTING_STATE',
  ContestMinParticipants = 'CONTEST_MIN_PARTICIPANTS',
  BattleSequenceGenerateError = 'BATTLE_SEQUENCE_GENERATE_ERROR',
  BattleSequenceNotFound = 'BATTLE_SEQUENCE_NOT_FOUND',
  BattleSequenceNotFinish = 'BATTLE_SEQUENCE_NOT_FINISH',
  DeviceTokenRequired = 'DEVICE_TOKEN_REQUIRED',
}
